service: trigger-dynamo
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE: Heroes # seta no process.env a variável DYNAMODB_TABLE com o valor Heroes
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:PutItem
            - dynamodb:ListStreams # permissão para ouvir esse evento
            - dynamodb:DescribeStream
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

resources:
  Resources:
    HeroesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: nome
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: nome
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

functions:
  heroes-insert:
    handler: src/index.main
    events:
      - http:
          path: /heroes
          method: post
          cors: true

  heroes-trigger:
    handler: src/trigger/index.main
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt:
              - HeroesTable
              - StreamArn

plugins:
  - serverless-plugin-typescript
